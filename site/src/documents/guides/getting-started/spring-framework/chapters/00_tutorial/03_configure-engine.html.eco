---
title: 'Configure an Embedded Process Engine'
shortTitle: 'Embedded Process Engine'
category: 'Tutorial'
---

<p>
  Now that you have set up the project with the correct Maven dependencies, we can start configuring the process engine.
  Add the following Spring beans configuration to the <code>src/main/webapp/WEB-INF/applicationContext.xml</code> file:
</p>
<div class="app-source" data-source-code="embeddedEngine.xml" annotate="code-annotations" ></div>
<p>
  After you added these definitions to the Spring Application context, perform a full Maven build and redeploy the
  application. In the logfile of the Apache Tomcat server you should be able to see the initialization of the
  process-engine:
</p>

<pre class="console">
28.04.2013 15:33:04 org.camunda.bpm.engine.impl.db.DbSqlSession executeSchemaResource
INFO: performing create on engine with resource org/camunda/bpm/engine/db/create/activiti.h2.create.engine.sql
28.04.2013 15:33:04 org.camunda.bpm.engine.impl.db.DbSqlSession executeSchemaResource
INFO: performing create on history with resource org/camunda/bpm/engine/db/create/activiti.h2.create.history.sql
28.04.2013 15:33:04 org.camunda.bpm.engine.impl.db.DbSqlSession executeSchemaResource
INFO: performing create on identity with resource org/camunda/bpm/engine/db/create/activiti.h2.create.identity.sql
28.04.2013 15:33:04 org.camunda.bpm.engine.impl.ProcessEngineImpl <init>
  INFO: ProcessEngine default created
</pre>

<%- @partial('get-tag.html.eco', @, {repo: "camunda-get-started-spring", tag: "Step-2"}) %>
