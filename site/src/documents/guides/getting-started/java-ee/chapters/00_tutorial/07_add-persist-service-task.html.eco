---
title: 'Add Persist Service Task'
category: 'Tutorial'
---
<p>
  After the process was started with the new order as process variables we want
  to persist the order in the database and only save the new generated order id
  as process variable.
</p>

<h3>Add an Entity Bean to the Process Application</h3>
<p>
  To persist the entity with JPA we add an entity bean to our process application. The entity
  class has to be annotated with <code>@Entity</code> and needs an <code>@Id</code> field.
  We also add an <code>@Version</code> field to the entity bean. This enables optimistic locking
  and ensures integrity during merges.
</p>

<div class="app-source" data-source-code="OrderEntity" annotate="code-annotations"></div>

<h3>Add an EJB to the Process Application</h3>
<p>
  The next step is to add a stateless EJB to the process application which is called by the process.
  In this EJB we inject the entity manager. It is used to manage our persistent objects during
  the session.
</p>
<p>
  In the method <code>persistOrder</code> a new instance of the order entity is created. And the
  order instance will be initialized with the values which are currently saved as process variables.
  After the newly created instance is flushed to the database its order id is set and the other
  process variables are no longer needed. So we remove the order properties and only add the
  order id as a process variable.
</p>

<div class="app-source" data-source-code="OrderBusinessLogic" annotate="code-annotations"></div>

<h3>Configure the EJB in the Process</h3>
<div class="row">
  <div class="col-xs-6 col-sm-6 col-md-3">
    <img id="eclipse-configure-service" data-img-thumb src="<%= @docUrl('assets/img/get-started/javaee/pizza-order-process-service-task-expression.png') %>" />
  </div>
  <div class="col-xs-9 col-sm-9 col-md-9">
    <p>
      Use the properties view of the Persist Service Task in the process (See Screenshot).
      You need to enter <code>${orderBusinessLogic.persistOrder(execution)}</code> as the
      the <code>Expression</code> property. This will call the <code>persistOrder</code> method
      of the named EJB with the current execution as parameter.
    </p>
    <p>
      Build, deploy and execute the process. After completing the <em>Persist Order</em> step, check the logfile
      of the JBoss AS server. It will show an insert for the new order entity:
    </p>
    <pre class="console">
11:36:11,659 INFO  [stdout] (http-/127.0.0.1:8080-1) Hibernate: insert into OrderEntity (address, approved, customer, pizza, version, id) values (?, ?, ?, ?, ?, ?)
    </pre>
  </div>

  <%- @partial('get-tag.html.eco', @, {repo: "camunda-get-started-javaee", tag: "Step-5"}) %>
</div>
